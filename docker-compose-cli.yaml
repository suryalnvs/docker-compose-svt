version: '2'

services:

  zookeeper0:
    extends:
      file:   base/docker-compose-base.yaml
      service: zookeeper0
    container_name: zookeeper0
  
  zookeeper1:
    extends:
      file:   base/docker-compose-base.yaml
      service: zookeeper1
    container_name: zookeeper1
    depends_on:
      - zookeeper0

  zookeeper2:
    extends:
      file:   base/docker-compose-base.yaml
      service: zookeeper2
    container_name: zookeeper2
    depends_on:
      - zookeeper0
      - zookeeper1

  kafka0:
    extends:
      file:   base/docker-compose-base.yaml
      service: kafka0
    container_name: kafka0
    depends_on:
      - zookeeper0
      - zookeeper1
      - zookeeper2

  kafka1:
    extends:
      file:   base/docker-compose-base.yaml
      service: kafka1
    container_name: kafka1
    depends_on:
      - zookeeper0
      - zookeeper1
      - zookeeper2

  kafka2:
    extends:
      file:   base/docker-compose-base.yaml
      service: kafka2
    container_name: kafka2
    depends_on:
      - zookeeper0
      - zookeeper1
      - zookeeper2

  orderer0.example.com:
    extends:
      file:   base/docker-compose-base.yaml
      service: orderer0.example.com
    container_name: orderer0.example.com
    depends_on:
      - kafka0
      - kafka1
      - kafka2

  orderer1.example.com:
    extends:
      file:   base/docker-compose-base.yaml
      service: orderer1.example.com
    container_name: orderer1.example.com
    depends_on:
      - kafka0
      - kafka1
      - kafka2

  orderer2.example.com:
    extends:
      file:   base/docker-compose-base.yaml
      service: orderer2.example.com
    container_name: orderer2.example.com
    depends_on:
      - kafka0
      - kafka1
      - kafka2

  couchdb0:
    container_name: couchdb0
    extends:
      file:  base/docker-compose-base.yaml
      service: couchdb0

  peer0.org1.example.com:
    container_name: peer0.org1.example.com
    extends:
      file:  base/docker-compose-base.yaml
      service: peer0.org1.example.com
    depends_on:
      - couchdb0
   
  couchdb1:
    container_name: couchdb1
    extends:
      file:  base/docker-compose-base.yaml
      service: couchdb1

  peer1.org1.example.com:
    container_name: peer1.org1.example.com
    extends:
      file:  base/docker-compose-base.yaml
      service: peer1.org1.example.com
    depends_on:
      - couchdb1
  
  couchdb2:
    container_name: couchdb2
    extends:
      file:  base/docker-compose-base.yaml
      service: couchdb2

  peer0.org2.example.com:
    container_name: peer0.org2.example.com
    extends:
      file:  base/docker-compose-base.yaml
      service: peer0.org2.example.com
    depends_on:
      - couchdb2

  couchdb3:
    container_name: couchdb3
    extends:
      file:  base/docker-compose-base.yaml
      service: couchdb3

  peer1.org2.example.com:
    container_name: peer1.org2.example.com
    extends:
      file:  base/docker-compose-base.yaml
      service: peer1.org2.example.com
    depends_on:
      - couchdb3

  cli:
    container_name: cli
    image: hyperledger/fabric-testenv
    tty: true
    environment:
      - GOPATH=/opt/gopath
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_LOGGING_LEVEL=DEBUG
      - CORE_PEER_ID=cli
      - CORE_PEER_ADDRESS=peer0.org1.example.com:7051
      - CORE_PEER_LOCALMSPID=Org1MSP
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt
      - CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: /bin/bash -c './scripts/script.sh ${CHANNEL_NAME}; sleep $TIMEOUT'
    volumes:
        - /var/run/:/host/var/run/
        - ./examples:/opt/gopath/src/github.com/hyperledger/fabric/examples
        - ./crypto-config:/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/
        - ./scripts:/opt/gopath/src/github.com/hyperledger/fabric/peer/scripts/
        - ./channel-artifacts:/opt/gopath/src/github.com/hyperledger/fabric/peer/channel-artifacts
    depends_on:
      - orderer0.example.com
      - orderer1.example.com
      - orderer2.example.com
      - peer0.org1.example.com
      - peer1.org1.example.com
      - peer0.org2.example.com
      - peer1.org2.example.com
